{"ast":null,"code":"var _jsxFileName = \"/Users/zygimantas/Desktop/REACT/react-project-routes/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Events from './pages/Events';\nimport EventDetail from './pages/EventDetail';\nimport NewEvent from './pages/NewEvent';\nimport EditEvent from './pages/EditEvent';\nimport RootLayout from './pages/Root';\nimport EventsRootLayout from './pages/EventsRoot';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 14\n  }, this),\n  //errorElement: \n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 30\n    }, this)\n  }, {\n    path: 'events',\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this),\n      loader: async () => {\n        const response = await fetch('http://localhost:8080/events');\n        if (!response.ok) {\n          setError('Fetching events failed.');\n        } else {\n          const resData = await response.json();\n          return resData.events;\n        }\n      }\n    }, {\n      path: ':eventID',\n      element: /*#__PURE__*/_jsxDEV(EventDetail, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }, this)\n    },\n    // : shows interactive links part\n    {\n      path: 'new',\n      element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 32\n      }, this)\n    }, {\n      path: ':eventID/edit',\n      element: /*#__PURE__*/_jsxDEV(EditEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 42\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  _s();\n  const [error, setError] = useState();\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"ohCv/qX5Qvv7Cjn7EU0ICsWDpi4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","Home","Events","EventDetail","NewEvent","EditEvent","RootLayout","EventsRootLayout","useState","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","loader","response","fetch","ok","setError","resData","json","events","App","_s","error","_c","$RefreshReg$"],"sources":["/Users/zygimantas/Desktop/REACT/react-project-routes/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport {createBrowserRouter, RouterProvider} from 'react-router-dom';\nimport Home from './pages/Home';\nimport Events from './pages/Events';\nimport EventDetail from './pages/EventDetail';\nimport NewEvent from './pages/NewEvent';\nimport EditEvent from './pages/EditEvent';\nimport RootLayout from './pages/Root';\nimport EventsRootLayout from './pages/EventsRoot';\nimport { useState } from 'react';\nconst router = createBrowserRouter([\n  {\n    path: '/',\n    element: <RootLayout />,\n    //errorElement: \n    children: [\n      {index: true, element: <Home/>},\n      {path: 'events', element: <EventsRootLayout/>, children: [\n        {\n          index: true, \n          element: <Events/>,\n          loader: async () => {\n            const response = await fetch('http://localhost:8080/events');\n      \n            if (!response.ok) {\n              setError('Fetching events failed.');\n            } else {\n              const resData = await response.json();\n              return resData.events;\n            }\n          }\n        },\n        {path: ':eventID', element: <EventDetail/>}, // : shows interactive links part\n        {path: 'new', element: <NewEvent/>},\n        {path: ':eventID/edit', element: <EditEvent/>},\n      ]},\n\n    ]\n  }\n]);\nfunction App() {\n  const [error, setError] = useState();\n  return <RouterProvider router={router}/>;\n}\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,mBAAmB,EAAEC,cAAc,QAAO,kBAAkB;AACpE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,MAAM,GAAGZ,mBAAmB,CAAC,CACjC;EACEa,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACJ,UAAU;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;EACvB;EACAC,QAAQ,EAAE,CACR;IAACC,KAAK,EAAE,IAAI;IAAEN,OAAO,eAAEH,OAAA,CAACT,IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE,CAAC,EAC/B;IAACL,IAAI,EAAE,QAAQ;IAAEC,OAAO,eAAEH,OAAA,CAACH,gBAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;IAAEC,QAAQ,EAAE,CACvD;MACEC,KAAK,EAAE,IAAI;MACXN,OAAO,eAAEH,OAAA,CAACR,MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;MAClBG,MAAM,EAAE,MAAAA,CAAA,KAAY;QAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;QAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChBC,QAAQ,CAAC,yBAAyB,CAAC;QACrC,CAAC,MAAM;UACL,MAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;UACrC,OAAOD,OAAO,CAACE,MAAM;QACvB;MACF;IACF,CAAC,EACD;MAACf,IAAI,EAAE,UAAU;MAAEC,OAAO,eAAEH,OAAA,CAACP,WAAW;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE,CAAC;IAAE;IAC7C;MAACL,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAEH,OAAA,CAACN,QAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE,CAAC,EACnC;MAACL,IAAI,EAAE,eAAe;MAAEC,OAAO,eAAEH,OAAA,CAACL,SAAS;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE,CAAC;EAC/C,CAAC;AAGN,CAAC,CACF,CAAC;AACF,SAASW,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEN,QAAQ,CAAC,GAAGhB,QAAQ,EAAE;EACpC,oBAAOE,OAAA,CAACV,cAAc;IAACW,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AAC1C;AAACY,EAAA,CAHQD,GAAG;AAAAG,EAAA,GAAHH,GAAG;AAKZ,eAAeA,GAAG;AAAC,IAAAG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}