{"ast":null,"code":"var _jsxFileName = \"/Users/zygimantas/Desktop/REACT/react-project-routes/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useParams, useLoaderData, json } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetail = event => {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"EventDetail\", /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n};\n_s(EventDetail, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetail;\nexport default EventDetail;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  // loader params are passed by react-router\n  const id = params.eventID;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event'\n    }, {\n      status: 500\n    });\n  } else {}\n  return response;\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["useParams","useLoaderData","json","EventItem","jsxDEV","_jsxDEV","EventDetail","event","_s","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","eventID","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Users/zygimantas/Desktop/REACT/react-project-routes/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useParams, useLoaderData, json } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nconst EventDetail = (event) => {\n    const data = useLoaderData();\n    \n    return <div>\n        EventDetail\n        <EventItem event={data.event}/>\n    </div>\n}\n\nexport default EventDetail;\n\nexport async function loader({request, params}) { // loader params are passed by react-router\n    const id = params.eventID;\n    const response = await fetch('http://localhost:8080/events/' + id);\n    \n    if(!response.ok){\n        throw json(\n            {message: 'Could not fetch details for selected event'},\n            {status: 500}\n        )\n    } else {\n\n    }\n    return response;\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AACjE,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAMC,IAAI,GAAGR,aAAa,EAAE;EAE5B,oBAAOI,OAAA;IAAAK,QAAA,GAAK,aAER,eAAAL,OAAA,CAACF,SAAS;MAACI,KAAK,EAAEE,IAAI,CAACF;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC7B;AACV,CAAC;AAAAN,EAAA,CAPKF,WAAW;EAAA,QACAL,aAAa;AAAA;AAAAc,EAAA,GADxBT,WAAW;AASjB,eAAeA,WAAW;AAE1B,OAAO,eAAeU,MAAMA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAAI;EAC9C,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAC;IACZ,MAAMtB,IAAI,CACN;MAACuB,OAAO,EAAE;IAA4C,CAAC,EACvD;MAACC,MAAM,EAAE;IAAG,CAAC,CAChB;EACL,CAAC,MAAM,CAEP;EACA,OAAOJ,QAAQ;AACnB;AAAC,IAAAP,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}